--- arch/x86/include/asm/i387.h	2011-11-11 13:12:24.000000000 -0500
+++ arch/x86/include/asm/i387.h	2011-11-15 20:02:59.000000000 -0500
@@ -223,13 +233,8 @@
 #endif	/* CONFIG_X86_64 */
 
 /* We need a safe address that is cheap to find and that is already
-   in L1 during context switch. The best choices are unfortunately
-   different for UP and SMP */
-#ifdef CONFIG_SMP
-#define safe_address (__per_cpu_offset[0])
-#else
-#define safe_address (kstat_cpu(0).cpustat.user)
-#endif
+   in L1 during context switch. */
+#define safe_address (init_tss[smp_processor_id()].x86_tss.sp0)
 
 /*
  * These must be called with preempt disabled
@@ -322,7 +327,7 @@
 	struct thread_info *me = current_thread_info();
 	preempt_disable();
 	if (me->status & TS_USEDFPU)
-		__save_init_fpu(me->task);
+		__save_init_fpu(current);
 	else
 		clts();
 }
